{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismitrakhovich/Documents/burger-app/burger-app/src/components/Burger/Burger.js\";\nimport React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients).map(ingredientName => {\n    return [...Array(props.ingredients[ingredientName])].map((_, index) => {\n      return /*#__PURE__*/React.createElement(BurgerIngredient, {\n        key: ingredientName + index,\n        type: ingredientName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 24\n        }\n      });\n    });\n  }).reduce((array, element) => {\n    return array.concat(element);\n  }, []);\n  console.log(transformedIngredients);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 34\n      }\n    }, \"Please start adding ingredients!\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Burger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), transformedIngredients, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["/Users/dzianismitrakhovich/Documents/burger-app/burger-app/src/components/Burger/Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","transformedIngredients","Object","keys","ingredients","map","ingredientName","Array","_","index","reduce","array","element","concat","console","log","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EACxBC,GADwB,CACpBC,cAAc,IAAI;AACnB,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,cAAlB,CAAD,CAAT,EAA8CD,GAA9C,CAAkD,CAACG,CAAD,EAAIC,KAAJ,KAAc;AACnE,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEH,cAAc,GAAGG,KAAxC;AAA+C,QAAA,IAAI,EAAEH,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH,GALwB,EAMxBI,MANwB,CAMjB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzB,WAAOD,KAAK,CAACE,MAAN,CAAaD,OAAb,CAAP;AACF,GARwB,EAQtB,EARsB,CAA7B;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYd,sBAAZ;;AACA,MAAIA,sBAAsB,CAACe,MAAvB,KAAkC,CAAtC,EAAyC;AACrCf,IAAAA,sBAAsB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAzB;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACoB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKhB,sBAFL,eAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CArBD;;AAuBA,eAAeF,MAAf","sourcesContent":["import React from 'react'\nimport classes from './Burger.module.css'\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(ingredientName => {\n            return [...Array(props.ingredients[ingredientName])].map((_, index) => {\n                return <BurgerIngredient key={ingredientName + index} type={ingredientName}/>\n            })\n        })\n        .reduce((array, element) => {\n           return array.concat(element)\n        }, [] )\n    console.log(transformedIngredients);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    )\n}\n\nexport default burger;\n"]},"metadata":{},"sourceType":"module"}