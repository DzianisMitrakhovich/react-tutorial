{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismitrakhovich/Documents/burger-app/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Auxiliary\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(ingKey => {\n        return ingredients[ingKey];\n      }).reduce((sum, element) => {\n        return sum + element;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert(\"You chose to continue!\");\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  render() {\n    const disableInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      price: this.state.totalPrice,\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disableInfo,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/dzianismitrakhovich/Documents/burger-app/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","updatePurchaseState","sum","Object","keys","map","ingKey","reduce","element","setState","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","newPrice","removeIngredientHandler","render","disableInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Auxiliary\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0,\n    },\n    totalPrice: 4,\n    purchasable: false,\n    purchasing: false\n  };\n\n  updatePurchaseState = (ingredients) => {\n    const sum = Object.keys(ingredients)\n      .map((ingKey) => {\n        return ingredients[ingKey];\n      })\n      .reduce((sum, element) => {\n        return sum + element;\n      }, 0);\n    this.setState({ purchasable: sum > 0 });\n  };\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true })\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false })\n  }\n\n  purchaseContinueHandler = () => {\n    alert(\"You chose to continue!\")\n  }\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  render() {\n    const disableInfo = {\n      ...this.state.ingredients,\n    };\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n    return (\n      <Aux>\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n          <OrderSummary\n            price={this.state.totalPrice}\n            ingredients={this.state.ingredients}\n            purchaseCancelled={this.purchaseCancelHandler}\n            purchaseContinued={this.purchaseContinueHandler} />\n        </Modal>\n        <Burger ingredients={this.state.ingredients} />\n\n\n        <BuildControls\n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled={disableInfo}\n          purchasable={this.state.purchasable}\n          ordered={this.purchaseHandler}\n          price={this.state.totalPrice}\n        />\n      </Aux>\n    );\n  }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}